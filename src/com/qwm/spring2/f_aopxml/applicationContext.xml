<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd ">

    <!--1.配置目标对象-->
    <bean name="userService" class="com.qwm.spring2.service.UserServiceImpl"/>

    <!--2.配置通知-->
    <bean name="myAdvice" class="com.qwm.spring2.f_aopxml.MyAdvice"/>

    <!--3.织入-->
    <aop:config>
        <!--切入点-->
        <!--切入点配置说明

           切入点配置需要使用 execution()

                  下面这个是配置 UserServiceImpl的saveUser方法
           public void com.qwm.spring2.service.UserServiceImpl.saveUser()
                  public可以省略
           void com.qwm.spring2.service.UserServiceImpl.saveUser()
                  可以使用 * 表示指定返回值
           * com.qwm.spring2.service.UserServiceImpl.saveUser()
                  可以使用 * 表示配置所有方法
           * com.qwm.spring2.service.UserServiceImpl.*()

                 可以使用 * 表示匹配指定的类 （只会匹配 service包下的类）
            * com.qwm.spring2.service.*ServiceImpl.*()
                 可以使用 .. 表示匹配子包已经子子包（会匹配 service包下以及所有子包的类）
            * com.qwm.spring2.service..*ServiceImpl.*()
        -->
        <aop:pointcut id="pc" expression="execution(* com.qwm.spring2.service.*ServiceImpl.*())"/>
        <!--织入通知-->
        <aop:aspect ref="myAdvice">
            <!--前置通知-->
            <aop:before method="before" pointcut-ref="pc"/>
            <!--后置通知-->
            <aop:after-returning method="afterReturning" pointcut-ref="pc"/>
            <!--环绕通知-->
            <aop:around method="around" pointcut-ref="pc"/>
            <!--异常拦截通知-->
            <aop:after-throwing method="afterException" pointcut-ref="pc"/>
            <!--后置通知-->
            <aop:after method="after" pointcut-ref="pc"/>
        </aop:aspect>
    </aop:config>

</beans>